---
- name: Provision moosefs on fedora-41
  hosts: storage
  become: yes
  
  vars:
    ntfy_token: "{{ lookup('env', 'NTFY_AUTH') }}"

  tasks:
  - name: Install ufw
    dnf:
      name: ufw
      state: present
      update_cache: yes
    register: ufw_install

  - name: Set default policy to deny incoming
    ufw:
      default: deny
      direction: incoming

  - name: Set default policy to allow outgoing
    ufw:
      default: allow
      direction: outgoing

  - name: Allow port 22
    ufw:
      rule: allow
      port: 22
      proto: tcp

  - name: Allow ports for mfsmaster
    ufw:
      rule: allow
      port: "{{ item }}"
      proto: tcp
    loop:
      - 9419
      - 9420
      - 9421
      - 9425
    when: "'storage-master' in group_names"

  - name: Allow ports for chunkservers
    ufw:
      rule: allow
      port: "{{ item }}"
      proto: tcp
    loop:
      - 5355
      - 9422
    when: "'storage-chunk' in group_names"

  - name: Download MooseFS GPG key
    ansible.builtin.get_url:
      url: "https://repository.moosefs.com/RPM-GPG-KEY-MooseFS"
      dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-MooseFS"
      mode: '0644'

  - name: Add moosefs repo
    ansible.builtin.yum_repository:
      name: MooseFS
      baseurl: http://repository.moosefs.com/moosefs-4/yum/el9
      description: moosefs repo
      gpgcheck: yes
      gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-MooseFS

  - name: DNF update
    ansible.builtin.yum:
      name: "*"
      state: latest

  - name: Install master servers
    ansible.builtin.yum:
      name: "{{ item }}"
      state: present
    loop:
      - moosefs-master
      - moosefs-cgi
      - moosefs-cgiserv
      - moosefs-cli
    when: "'storage-master' in group_names"

  - name: Install chunkservers
    ansible.builtin.yum:
      name: moosefs-chunkserver
      state: present
    when: "'storage-chunk' in group_names"

  - name: Install metalogger
    ansible.builtin.dnf:
      name: moosefs-metalogger
      state: present
    when: "'storage-metalogger' in group_names"

  - name: Enable ufw
    ufw:
      state: enabled

  - name: Reload ufw
    ufw:
      state: reloaded

  - name: Reboot if ufw installed for first time
    ansible.builtin.reboot:
    when: ufw_install.changed
